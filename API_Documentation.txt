Introduction

  Welcome to the Social Network API documentation. This API allows developers to integrate social networking
 features into their applications, enabling users to connect, share, and interact with each other.
  This documentation provides details on the available endpoints, request/response formats, authentication methods, and more.



Base URL
The base URL for all API endpoints is:

https://localhost:3000/api


Authentication Endpoints

1. User Registration
Endpoint: POST /register
Description: Register a new user.
Request:

{
  "username": "john_doe",
  "email": "john.doe@example.com",
  "password": "securepassword123"
}

response: 

{
  "msg": "user created",
  "user": {
    "username": "john_doe",
    "email": "john_doe@example.com",
    "profilePicture": "",
    "coverPicture": "",
    "followers": [],
    "followings": [],
    "isAdmin": false,
    "_id": "65ed47521e3129992cca2abc",
    "createdAt": "2024-03-10T05:38:26.270Z",
    "updatedAt": "2024-03-10T05:38:26.270Z",
    "__v": 0
  }
}


2. User Login
Endpoint: POST /users/login
Description: Log in an existing user.
Request:

{
  "email": "john.doe@example.com",
  "password": "securepassword123"
}

response: 

{
  "msg": "logged in successfully"
}

cookie : JWT cookie is being passed 

3. Retrieve User Profile
Endpoint: GET /users/{user_id}
Description: Get user profile information.
Request: None


Response if you he/she is in your followings:


{
  "user": {
    "_id": "65ec90caddf544f486f471be",
    "username": "user_name",
    "email": "user_name@gmail.com",
    "profilePicture": "",
    "coverPicture": "",
    "followers": [
      "65ec90f9ddf544f486f471c1",
      "65ed47521e3129992cca2abc"
    ],
    "followings": [],
    "isAdmin": true,
    "createdAt": "2024-03-09T16:39:38.518Z",
    "__v": 0
  },
  "posts": [
    {
      "_id": "65ed1d49e22275c0ff9dec64",
      "createdBy": "65ec90caddf544f486f471be",
      "desc": "hawaiiii",
      "likes": [],
      "comments": [],
      "createdAt": "2024-03-10T02:39:05.052Z",
      "updatedAt": "2024-03-10T02:39:05.052Z",
      "__v": 0
    }
  ]
}


Response if she/he is not in your followings:

{
  "_id": "65ec90caddf544f486f471be",
  "username": "user_name",
  "profilePicture": "",
  "coverPicture": "",
  "createdAt": "2024-03-09T16:39:38.518Z",
  "__v": 0
}

 4. Follow a profile

 Endpoint: PUT /users/{user_id}/follow
 Description: follow the user.
 Request: None
 Response:

{
    msg: "You are now following this profile."
}

5. Unfollow a profile 

 Endpoint: PUT /users/{user_id}/Unfollow
 Description: Unfollow the profile.
 Request: None
 Response:

 {
    msg: "user unfollowed"
 }



 
                            ///////   Post Endpoints ////////
6. Create Post 

 Endpoint: POST posts/create-post
 Description: Create a new post.
 Request:

 {
    
  "content": "This is a new post!"

 }

 Response: 

 {
   "post": {
     "createdBy": "65ed47521e3129992cca2abc",
     "desc": "this is an new post!",
     "likes": [],
     "comments": [],
     "_id": "65ed4d83956e94c2ab703690",
     "createdAt": "2024-03-10T06:04:51.980Z",
     "updatedAt": "2024-03-10T06:04:51.980Z",
     "__v": 0
   }
 }


 7. Feed
Endpoint: GET /users/timeline/all
Description: Get the feed with recent posts by you and your followings.
Request: None
Response:

[
  {
    "_id": "65ed4d83956e94c2ab703690",
    "createdBy": "65ed47521e3129992cca2abc",
    "desc": "this is an new post!",
    "likes": [],
    "comments": [],
    "createdAt": "2024-03-10T06:04:51.980Z",
    "updatedAt": "2024-03-10T06:04:51.980Z",
    "__v": 0
  },
  {
    "_id": "65ed1d49e22275c0ff9dec64",
    "createdBy": "65ec90caddf544f486f471be",
    "desc": "hawaiiii",
    "likes": [],
    "comments": [],
    "createdAt": "2024-03-10T02:39:05.052Z",
    "updatedAt": "2024-03-10T02:39:05.052Z",
    "__v": 0
  }
]

  8. Edit a post your

  Endpoint: put /posts/{post_id}/update
  Description: edit a post
  Request: 

  {
    "desc": " safari"
  }

  Response:
    
    {
        msg: 'post updated successfully"

        post: {
            createdAt: "00000",
            id: "post_id",
            desc: "safari"
        }
    }

   9. Delete a post of your

   Endpoint: DELETE /posts/{post_id}/delete
   Description: Delete a post or your. You can't delete others posts, unless you are an admin.
   Request: None

   Response:
   
    {
        msg: "post deleted successfully"
   }

   /////////////////////////////////////////// DELETE YOU PROFILE ////////////////////////////////////////


   Endpoint: DELETE /users/{user_id}/delete
   Description: Delete your profile. You can't delete others profile, unless you are an admin.
   Request: None

   Response:
   
    {
        msg: "profile deleted successfully"
   }
  



    /////////////////////////////////  Likes and comments /////////////////////////////////////

    1.  Endpoint: PUT /posts/{post_id}/like
        Description: like a post.
        Request: None

        response : 

        {
            msg: "You liked this post"
        }

    2. Endpoint: PUT /posts/{post_id}/comments
       Description: Add comment on a post.
       Request: 

       {
        "comment": "this is comment"
       }  

       Response:

       {
        msg: "comment added successfully"
       }  

